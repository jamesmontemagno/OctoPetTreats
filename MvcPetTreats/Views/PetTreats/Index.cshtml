@using MvcPetTreats.Models
@model PetTreatTypeViewModel

@{
    ViewData["Title"] = "Pet Treats";
    var hasTreats = Model.PetTreats != null && Model.PetTreats.Count > 0;
}

<h1>Pet Treats</h1>

<form asp-controller="PetTreats" asp-action="Index" method="get">
    <p>
        Type: <select asp-for="PetTreatType" asp-items="Model.Types">
            <option value="">All</option>
        </select>
        Name: <input type="text" asp-for="SearchString" />
        <input type="submit" value="Filter" />
    </p>
</form>


@if (hasTreats)
{
    <table class="table">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.PetTreats!.First().Name)</th>
                <th>@Html.DisplayNameFor(model => model.PetTreats!.First().Type)</th>
                <th>@Html.DisplayNameFor(model => model.PetTreats!.First().Flavor)</th>
                <th>@Html.DisplayNameFor(model => model.PetTreats!.First().ExpirationDate)</th>
                <th>@Html.DisplayNameFor(model => model.PetTreats!.First().Price)</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
        @foreach (var item in Model.PetTreats!) {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.Type)</td>
                <td>@Html.DisplayFor(modelItem => item.Flavor)</td>
                <td>@Html.DisplayFor(modelItem => item.ExpirationDate)</td>
                <td>@Html.DisplayFor(modelItem => item.Price)</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
        </tbody>
    </table>
}
else
{
    <p>No pet treats found.</p>
}

<p>
    <a asp-action="Create">Create New</a>
</p>
